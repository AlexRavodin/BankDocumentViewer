// <auto-generated />
using System;
using System.Numerics;
using BankDocumentViewer.Viewer.Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Viewer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Viewer.Models.BankDocumentFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Created")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BankDocumentFiles");
                });

            modelBuilder.Entity("Viewer.Models.Dto.StatisticsDto", b =>
                {
                    b.Property<double>("Median")
                        .HasColumnType("double precision");

                    b.Property<BigInteger>("Sum")
                        .HasColumnType("numeric");

                    b.ToTable("StatisticsDto");
                });

            modelBuilder.Entity("Viewer.Models.GeneratedRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EnglishString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("FloatNumber")
                        .HasColumnType("real");

                    b.Property<int>("IntegerNumber")
                        .HasColumnType("integer");

                    b.Property<string>("RussianString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GeneratedRecords");
                });

            modelBuilder.Entity("Viewer.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountingCode")
                        .HasColumnType("integer");

                    b.Property<decimal>("ActiveSaldoIn")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ActiveSaldoOut")
                        .HasColumnType("numeric");

                    b.Property<int>("BankDocumentId")
                        .HasColumnType("integer");

                    b.Property<int>("ClassId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Credit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Debit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PassiveSaldoIn")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PassiveSaldoOut")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("BankDocumentId");

                    b.HasIndex("ClassId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("Viewer.Models.OperationClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BankDocumentFileId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BankDocumentFileId");

                    b.ToTable("OperationClass");
                });

            modelBuilder.Entity("Viewer.Models.Operation", b =>
                {
                    b.HasOne("Viewer.Models.BankDocumentFile", "BankDocument")
                        .WithMany("Operations")
                        .HasForeignKey("BankDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Viewer.Models.OperationClass", "Class")
                        .WithMany("Operations")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankDocument");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("Viewer.Models.OperationClass", b =>
                {
                    b.HasOne("Viewer.Models.BankDocumentFile", null)
                        .WithMany("Classes")
                        .HasForeignKey("BankDocumentFileId");
                });

            modelBuilder.Entity("Viewer.Models.BankDocumentFile", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Operations");
                });

            modelBuilder.Entity("Viewer.Models.OperationClass", b =>
                {
                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
